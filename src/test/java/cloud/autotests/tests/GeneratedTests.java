package cloud.autotests.tests;

import cloud.autotests.helpers.DriverUtils;
import io.qameta.allure.Description;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import static com.codeborne.selenide.Condition.*;
import static com.codeborne.selenide.Selenide.*;
import static io.qameta.allure.Allure.step;
import static org.assertj.core.api.Assertions.assertThat;


public class GeneratedTests extends TestBase {
    @Test
    @Description("Autogenerated test")
    @DisplayName("Проверка заголовка главной страницы")
    void titleTest() {
        step("Открываем сайт Tourmachine", () -> {
            open("https://www.tourmachine.net");
        });

        step("Заголовок страницы должен иметь текст 'Уникальные впечатления в путешествиях по России'", () -> {
            String expectedTitle = "Уникальные впечатления в путешествиях по России";
            String actualTitle = title();

            assertThat(actualTitle).isEqualTo(expectedTitle);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Проверка ошибок в консоле")
    void consoleShouldNotHaveErrorsTest() {
        step("Открываем сайт Tourmachine", () -> {
            open("https://www.tourmachine.net/");
        });

        step("Журнал консоли не должен содержать текст 'SEVERE'", () -> {
            String consoleLogs = DriverUtils.getConsoleLogs();
            String errorText = "SEVERE";

            assertThat(consoleLogs).doesNotContain(errorText);
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Проверка состава путешественников по-умолчанию")
    void checkGuestsProfile() {
        step("Открываем сайт Tourmachine", () -> {
            open("https://www.tourmachine.net");
        });

        step("В поле о количестве гостей по-умолчанию содержится '2 взрослых'", () -> {
            $(".MuiButton-label.jss331").shouldBe(visible).shouldHave(text("2 взрослых"));
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Проверка кнопки 'Витрина впечатлений'")
    void checkButton() {
        step("Открываем сайт Tourmachine", () -> {
            open("https://www.tourmachine.net");
        });
        step("На главной странице содержится кнопка 'Витрина впечатлений'", () -> {
            $(".jss52.jss105.custom-typography-p2medium").shouldHave(text("Витрина впечатлений"));
        });
    }

    @Test
    @Description("Autogenerated test")
    @DisplayName("Проверка плейсхолдера 'Куда хотите поехать1'")
    void checkPlaceholder() {
        step("Открываем сайт Tourmachine", () -> {
            open("https://www.tourmachine.net");
        });
        step("В поле поиска путешествий содержится плейсхолдер 'Куда хотите поехать?'", () -> {
            $x("(//div[@class='jss161 jss152']//input[@placeholder])").shouldHave(attribute("placeholder", "Куда хотите поехать?"));
        });
    }
}